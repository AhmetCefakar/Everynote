@model Everynote.Entities.Category

@{
	ViewBag.Title = "Edit";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="row">
	<div class="col-md-8 col-md-offset-1">
		<h2>Kategori Güncelle</h2>
	</div>
</div>
<hr />


<div class="row">
	<div class="col-md-8 col-md-offset-3">
		@using (Html.BeginForm())
		{
			@Html.AntiForgeryToken()

			<div class="form-horizontal">
				<h4>Category</h4>
				<hr />
				@Html.ValidationSummary(true, "", new { @class = "text-danger" })
				@Html.HiddenFor(model => model.Id)

				<div class="form-group">
					@Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
					</div>
				</div>

				@*<div class="form-group">
					@Html.LabelFor(model => model.CreatedUserName, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.CreatedUserName, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.CreatedUserName, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.CreatedOn, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.CreatedOn, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.ModifiedUserName, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.ModifiedUserName, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.ModifiedUserName, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="form-group">
					@Html.LabelFor(model => model.ModifiedOn, htmlAttributes: new { @class = "control-label col-md-2" })
					<div class="col-md-10">
						@Html.EditorFor(model => model.ModifiedOn, new { htmlAttributes = new { @class = "form-control" } })
						@Html.ValidationMessageFor(model => model.ModifiedOn, "", new { @class = "text-danger" })
					</div>
				</div>*@

				<div class="form-group">
					<div class="col-md-offset-2 col-md-10">
						<input type="submit" value="Save" class="btn btn-success" />
						@Html.ActionLink("Back to List", "Index", "Category", new { @class = "btn btn-default" })
					</div>
				</div>
			</div>
		}
	</div>
</div>